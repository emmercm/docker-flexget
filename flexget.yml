web_server: yes

schedules:
  - tasks: '*'
    interval:
      minutes: 5

###########################################################################

templates:
  global:
    # Periodically check for FlexGet updates
    version_checker: yes

  # Disable "seen" to not care about or remember "seen" status
  disable-seen:
    disable:
      - seen
      - seen_info_hash

  ######################
  #                    #
  #     ENTRY LISTS    #
  #                    #
  ######################

  # Exponential backoff for failed entries
  _retry: &retry
    retry_failed:
      retry_time: 30 minutes
      retry_time_multiplier: 1.5
      max_retries: 100

  # Base configuration for output entry lists
  _output-entry-list: &output-entry-list
    accept_all: yes

  # Base configuration for input entry lists
  _input-entry-list: &input-entry-list
    seen: local
    seen_info_hash: local

  # Aggregate TV from input tasks
  output-list-tv:
    <<: *retry-failed
    <<: *output-entry-list
    list_add:
      - entry_list: tv
  # Use aggregated TV as an input
  input-list-tv:
    <<: *input-entry-list
    entry_list: tv

  # Aggregate movies from input tasks
  output-list-movies:
    <<: *retry-failed
    <<: *output-entry-list
    list_add:
      - entry_list: movies
  # Use aggregated movies as an input
  input-list-movies:
    <<: *input-entry-list
    entry_list: movies

  #########################
  #                       #
  #     MANAGED LISTS     #
  #                       #
  #########################

  # Base configuration for managed lists output
  _output-list-trakt: &output-list-trakt
    accept_all: yes

  # Aggregate movies from external watchlists
  output-list-trakt-movies:
    <<: *output-list-trakt
    list_add:
      - movie_list: trakt-movies
  # Filter input with aggregated movie watchlist
  filter-list-trakt-movies:
    list_match:
      from:
        - movie_list: trakt-movies
  # Use movie watchlist as a discover input
  input-discover-list-trakt-movies:
    <<: *input-entry-list
    discover: '{? movies.discover ?}'
  # Remove movies from internal watchlist
  output-remove-list-trakt-movies:
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.lists.movies ?}'
          type: movies

  # Aggregate TV from external watchlists
  output-list-trakt-shows:
    <<: *output-list-trakt
    list_add:
      - entry_list: trakt-shows
  # Filter input with aggregated TV watchlist
  filter-list-trakt-shows:
    configure_series:
      from:
        entry_list: trakt-shows
      settings:
        quality: '{? tv.quality ?}'
        upgrade: yes
    series: '{? tv.series ?}'

  ########################
  #                      #
  #     LIST FILTERS     #
  #                      #
  ########################

  # Assume quality when it's missing in the entry title
  _assume-quality: &assume-quality
    assume_quality: 480p h264

  # Filter TV inputs
  filter-shows:
    <<: *assume-quality
    regexp: '{? tv.regexp ?}'

  # Filter movies inputs
  filter-movies:
    <<: *assume-quality
    quality: '{? movies.quality ?}'
    upgrade:
      target: '{? movies.quality ?}'
      propers: yes
    regexp: '{? movies.regexp ?}'

  #########################
  #                       #
  #     FINAL OUTPUTS     #
  #                       #
  #########################

  # Output to torrent client
  output-torrent: '{? torrent_client ?}'

  # Output to the "download" list
  output-download-list:
    list_add:
      - entry_list: download

###########################################################################

tasks:
  ##################
  #                #
  #     INPUTS     #
  #                #
  ##################

  # Fetch TV RSS feeds
  rss-tv:
    priority: 10
    template:
      - output-list-tv
    inputs: '{? tv.inputs ?}'

  # Fetch movie RSS feeds
  rss-movies:
    priority: 10
    template:
      - output-list-movies
    inputs: '{? movies.inputs ?}'

  ########################
  #                      #
  #     MANAGE LISTS     #
  #                      #
  ########################

  # Convert Trakt.tv TV episodes to TV shows
  manage-trakt-episodes-to-shows:
    priority: 20
    template:
      - disable-seen
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.lists.shows ?}'
      type: episodes
    accept_all: yes
    set_series_begin: yes
    list_remove:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.lists.shows ?}'
          type: episodes
    list_add:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.lists.shows ?}'
          type: shows

  # Move IMDB movie watchlist to Trakt.tv
  list-imdb-watchlist:
    priority: 20
    template:
      - disable-seen
    imdb_list:
      login: '{? imdb.email ?}'
      password: '{? imdb.pass ?}'
      list: '{? imdb.list ?}'
    accept_all: yes
    list_add:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.lists.movies ?}'
          type: movies
    list_remove:
      - imdb_list:
          login: '{? imdb.email ?}'
          password: '{? imdb.pass ?}'
          list: '{? imdb.list ?}'

  #######################
  #                     #
  #     LIST INPUTS     #
  #                     #
  #######################

  # Fetch Trakt.tv movie watchlist
  list-trakt-movie-watchlist:
    priority: 30
    template:
      - disable-seen
      - output-list-trakt-movies
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.lists.movies ?}'
      type: movies
    require_field: movie_year

  # Fetch Trakt.tv TV show watchlist
  list-trakt-shows-watchlist:
    priority: 30
    template:
      - disable-seen
      - output-list-trakt-shows
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.lists.shows ?}'
      type: shows

  ###################
  #                 #
  #     OUTPUTS     #
  #                 #
  ###################

  # Download from TV inputs filtering by TV watchlist
  download-tv-watchlist:
    template:
      - input-list-tv
      - filter-shows
      - filter-list-trakt-shows
      - output-torrent
      - output-download-list

  # Download from movie inputs filtering by movie watchlist
  download-movies-watchlist:
    template:
      - input-list-movies
      - filter-movies
      - filter-list-trakt-movies
      - output-torrent
      - output-download-list
      - output-remove-list-trakt-movies

  # Download by searching for movies in watchlist
  download-movies-watchlist-discover:
    template:
      - input-discover-list-trakt-movies
      - filter-movies
      - filter-list-trakt-movies
      - output-torrent
      - output-download-list
      - output-remove-list-trakt-movies

  # Download from movie inputs filtering by IMDB ratings
  download-movies-imdb-ratings:
    template:
      - input-list-movies
      - filter-movies
      - output-torrent
      - output-download-list
      - output-remove-list-trakt-movies
    # Note: can't be done as an entry list task because it's a filter plugin
    imdb_lookup: yes
    require_field: imdb_id
    imdb: '{? imdb.filter ?}'
