version: 2.1

references:
  environment: &environment
    REPO_NAME: emmercm/flexget

executors:
  docker:
    docker:
      - image: docker:stable@sha256:5f9d0de7c4492667d6cb2dfd598fe25e0793ec71cc6ff15be6cf8ecdf03888a8

jobs:
  build:
    parameters:
      version:
        type: string
      tags:
        type: string
        default: ""
    executor: docker
    environment:
      VERSION: << parameters.version >>
      TAGS: << parameters.tags >>
      <<: *environment
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
            - v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-
            - v4-{{ .Environment.CIRCLE_JOB }}-
          paths:
            - /cache
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            for TAR in $(ls -1 /cache/*.tar); do
              docker load --input "${TAR}"
              rm "${TAR}"
            done
      - run:
          name: Build Docker Image
          command: |
            docker build \
              --file=${VERSION%.*}/Dockerfile \
              --cache-from=${REPO_NAME}:${VERSION} \
              --build-arg VERSION=${VERSION} \
              --tag ${REPO_NAME}:${VERSION} \
              --tag ${REPO_NAME}:${VERSION}-alpine .
            for TAG in ${TAGS}; do
              docker tag ${REPO_NAME}:${VERSION} ${REPO_NAME}:${TAG}
            done
      - run:
          name: Test Docker Image
          command: |
            apk add --no-cache curl
            curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
            container-structure-test test --config ${VERSION%.*}/container-structure-test.yml --image ${REPO_NAME}:${VERSION}
      - run:
          name: Save Docker Image(s) to Cache
          command: |
            if [[ ! -e /cache ]]; then
              mkdir /cache
            fi
            docker save --output /cache/${VERSION}.tar ${REPO_NAME}
      - save_cache:
          key: v4-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - /cache
      - persist_to_workspace:
          root: /cache
          paths:
            - "*"

  test:
    executor: docker
    steps:
      - run:
          name: Test Docker Image(s)
          command: |
            echo ok

  push:
    executor: docker
    environment:
      <<: *environment
    steps:
      - attach_workspace:
          at: /cache
      - setup_remote_docker
      - run:
          name: Load Docker Image(s) from Cache
          command: |
            for TAR in $(ls -1 /cache/*.tar); do
              docker load --input "${TAR}"
            done
      - run:
          name: Publish Docker Image
          command: |
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            for TAG in $(docker image ls --format "{{.Repository}}:{{.Tag}}" ${REPO_NAME}); do
              docker push ${TAG}
            done
      - run:
          name: Update MicroBadger
          command: |
            apk add --no-cache curl
            curl --request POST "${MICROBADGER_WEBHOOK}"

  update-description:
    executor: docker
    environment:
      <<: *environment
    steps:
      - checkout
      - run:
          name: Update Docker Hub Description
          command: |
            apk add --no-cache curl jq
            TOKEN=$(curl \
              --silent \
              --request POST \
              https://hub.docker.com/v2/users/login/ \
              --header "Content-Type: application/json" \
              --data '{"username":"'"${DOCKERHUB_USERNAME}"'", "password":"'"${DOCKERHUB_PASS}"'"}' | \
              jq -r .token)
            jq \
              --null-input \
              --arg DESCRIPTION "$(cat README.md | grep '^\w' | head -1)" \
              --arg FULL_DESCRIPTION "$(cat README.md)" \
              '{"description":$DESCRIPTION, "full_description":$FULL_DESCRIPTION}' | \
              curl \
                --request PATCH \
                https://hub.docker.com/v2/repositories/${REPO_NAME}/ \
                --header "Content-Type: application/json" \
                --header "Authorization: JWT ${TOKEN}" \
                --data @-

workflows:
  version: 2.1
  build-test-push:
    jobs:
      # https://flexget.com/ChangeLog
      - build:
          name: "2.21"
          version: 2.21.0
          tags: 2.21 2.21-alpine 2 2-alpine latest
      - build:
          name: "2.20"
          version: 2.20.0
          tags: 2.20 2.20-alpine
      - build:
          name: "2.19"
          version: 2.19.0
          tags: 2.19 2.19-alpine
      - build:
          name: "2.18"
          version: 2.18.0
          tags: 2.18 2.18-alpine
      - build:
          name: "2.17"
          version: 2.17.0
          tags: 2.17 2.17-alpine

      - test:
          requires:
            - "2.21"
            - "2.20"
            - "2.19"
            - "2.18"
            - "2.17"
      
      - push:
          requires:
            - test
          filters:
            branches:
              only: master

      - update-description:
          requires:
            - push
          filters:
            branches:
              only: master
